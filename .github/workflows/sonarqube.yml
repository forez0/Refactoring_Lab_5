name: SonarQube Analysis

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  sonar-analysis:
    runs-on: ubuntu-latest

    services:
      sonarqube:
        image: sonarqube:community
        ports:
          - 9000:9000
        env:
          SONAR_ES_BOOTSTRAP_CHECKS_DISABLE: "true"
          SONAR_FORCE_AUTHENTICATION: "true"  # Увімкнути автентифікацію
        volumes:
          - sonarqube_data:/opt/sonarqube/data
          - sonarqube_extensions:/opt/sonarqube/extensions

    env:
      SONAR_HOST_URL: http://localhost:9000
      SONAR_PROJECT_KEY: library_service_key

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Install sonar-scanner
        run: |
          sudo apt-get install -y wget unzip
          wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
          unzip sonar-scanner-cli-5.0.1.3006-linux.zip
          sudo mv sonar-scanner-5.0.1.3006-linux /opt/sonar-scanner
          echo "/opt/sonar-scanner/bin" >> $GITHUB_PATH

      - name: Wait for SonarQube
        run: |
          echo "Waiting for SonarQube to start..."
          for i in {1..30}; do
            if curl -s http://localhost:9000/api/system/status | grep -q 'UP'; then
              echo "SonarQube is ready!"
              # Додаткове очікування для ініціалізації
              sleep 30
              break
            fi
            sleep 5
          done

      - name: Setup Admin Token
        run: |
          # Зміна пароля admin (якщо перший запуск)
          curl -u admin:admin -X POST "http://localhost:9000/api/users/change_password" \
            -d "login=admin" \
            -d "previousPassword=admin" \
            -d "newPassword=newAdminPassword123" || echo "Password might already be changed"
          
          # Генерація токена
          TOKEN=$(curl -u admin:newAdminPassword123 -X POST "http://localhost:9000/api/user_tokens/generate" \
            -d "name=github_action_token" \
            -d "login=admin" | jq -r '.token')
          
          echo "Generated token: $TOKEN"
          echo "SONAR_TOKEN=$TOKEN" >> $GITHUB_ENV

      - name: Run Analysis
        run: |
          sonar-scanner \
            -Dsonar.projectKey=$SONAR_PROJECT_KEY \
            -Dsonar.sources=. \
            -Dsonar.host.url=$SONAR_HOST_URL \
            -Dsonar.login=${{ env.SONAR_TOKEN }} \
            -X

      - name: Check results
        run: |
          sleep 15  # Чекаємо обробки результатів
          curl -u ${{ env.SONAR_TOKEN }}: "" "$SONAR_HOST_URL/api/qualitygates/project_status?projectKey=$SONAR_PROJECT_KEY"