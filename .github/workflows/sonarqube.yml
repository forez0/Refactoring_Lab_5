name: SonarQube Analysis

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  sonar-analysis:
    runs-on: ubuntu-latest
    env:
      SONAR_HOST_URL: http://localhost:9000
      SONAR_PROJECT_KEY: library_service_key
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Build custom SonarScanner image
      run: |
        docker build -t custom-sonarscanner -f sonar-scanner.Dockerfile .

    - name: Run SonarScanner in Docker
      run: |
        docker run --rm \
          --network=host \
          -e SONAR_HOST_URL=$SONAR_HOST_URL \
          -e SONAR_TOKEN=$SONAR_TOKEN \
          -e SONAR_PROJECT_KEY=$SONAR_PROJECT_KEY \
          -v "$PWD:/usr/src" \
          custom-sonarscanner

    - name: Fetch coverage via API
      run: |
        sleep 10
        curl -s "$SONAR_HOST_URL/api/measures/component?component=$SONAR_PROJECT_KEY&metricKeys=coverage" \
          | jq -r '.component.measures[0].value' > coverage.txt

    - name: Read and export coverage
      id: coverage
      run: |
        COVERAGE=$(cat coverage.txt)
        echo "code_coverage=$COVERAGE" >> $GITHUB_ENV
        echo "Coverage is $COVERAGE%"

    - name: Conditional pass/fail by coverage
      if: ${{ env.code_coverage >= 30 }}
      run: echo "✅ Coverage OK"

    - name: Fail if coverage too low
      if: ${{ env.code_coverage < 30 }}
      run: |
        echo "❌ Coverage too low: ${{ env.code_coverage }}%"
        exit 1
