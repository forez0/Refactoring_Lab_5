name: SonarQube Scan

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  sonar:
    runs-on: ubuntu-latest

    services:
      sonarqube:
        image: sonarqube:community  # або sonarqube:9.9.1-community (стабільна версія)
        ports:
          - 9000:9000
        env:
          SONAR_ES_BOOTSTRAP_CHECKS_DISABLE: "true"
        volumes:
          - sonarqube_data:/opt/sonarqube/data
          - sonarqube_extensions:/opt/sonarqube/extensions

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Verify token
        run: |
          curl -u ${{ secrets.SONAR_TOKEN }}: "" "http://localhost:9000/api/user_tokens/search"

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Wait for SonarQube to be ready
        run: |
          for i in {1..30}; do
            if curl -s http://localhost:9000/api/system/status | grep -q '"status":"UP"'; then
              echo "SonarQube is ready!"
              sleep 10  # Додатковий час для ініціалізації
              exit 0
            fi
            echo "Waiting for SonarQube to start..."
            sleep 10
          done
          echo "SonarQube did not start in time!"
          exit 1

      - name: Download and setup SonarScanner
        run: |
          # Використовуємо новішу версію SonarScanner
          wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
          unzip sonar-scanner-cli-5.0.1.3006-linux.zip
          echo "$PWD/sonar-scanner-5.0.1.3006-linux/bin" >> $GITHUB_PATH

      - name: Run SonarScanner analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner \
            -Dsonar.projectKey=library_service_key \
            -Dsonar.host.url=http://localhost:9000 \
            -Dsonar.login=$SONAR_TOKEN \
            -Dsonar.sources=. \
            -Dsonar.sourceEncoding=UTF-8 \
            -X